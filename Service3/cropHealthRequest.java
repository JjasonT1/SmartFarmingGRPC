// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Service3CropHealth.proto

package jt.smartFarmingService3;

/**
 * Protobuf type {@code service3CropHealth.cropHealthRequest}
 */
public  final class cropHealthRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:service3CropHealth.cropHealthRequest)
    cropHealthRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use cropHealthRequest.newBuilder() to construct.
  private cropHealthRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private cropHealthRequest() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private cropHealthRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            jt.smartFarmingService3.health.Builder subBuilder = null;
            if (health_ != null) {
              subBuilder = health_.toBuilder();
            }
            health_ = input.readMessage(jt.smartFarmingService3.health.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(health_);
              health_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            jt.smartFarmingService3.water.Builder subBuilder = null;
            if (water_ != null) {
              subBuilder = water_.toBuilder();
            }
            water_ = input.readMessage(jt.smartFarmingService3.water.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(water_);
              water_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            jt.smartFarmingService3.soil.Builder subBuilder = null;
            if (soil_ != null) {
              subBuilder = soil_.toBuilder();
            }
            soil_ = input.readMessage(jt.smartFarmingService3.soil.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(soil_);
              soil_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return jt.smartFarmingService3.Service3CropHealthImpl.internal_static_service3CropHealth_cropHealthRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return jt.smartFarmingService3.Service3CropHealthImpl.internal_static_service3CropHealth_cropHealthRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            jt.smartFarmingService3.cropHealthRequest.class, jt.smartFarmingService3.cropHealthRequest.Builder.class);
  }

  public static final int HEALTH_FIELD_NUMBER = 1;
  private jt.smartFarmingService3.health health_;
  /**
   * <code>.service3CropHealth.health health = 1;</code>
   */
  public boolean hasHealth() {
    return health_ != null;
  }
  /**
   * <code>.service3CropHealth.health health = 1;</code>
   */
  public jt.smartFarmingService3.health getHealth() {
    return health_ == null ? jt.smartFarmingService3.health.getDefaultInstance() : health_;
  }
  /**
   * <code>.service3CropHealth.health health = 1;</code>
   */
  public jt.smartFarmingService3.healthOrBuilder getHealthOrBuilder() {
    return getHealth();
  }

  public static final int WATER_FIELD_NUMBER = 2;
  private jt.smartFarmingService3.water water_;
  /**
   * <code>.service3CropHealth.water water = 2;</code>
   */
  public boolean hasWater() {
    return water_ != null;
  }
  /**
   * <code>.service3CropHealth.water water = 2;</code>
   */
  public jt.smartFarmingService3.water getWater() {
    return water_ == null ? jt.smartFarmingService3.water.getDefaultInstance() : water_;
  }
  /**
   * <code>.service3CropHealth.water water = 2;</code>
   */
  public jt.smartFarmingService3.waterOrBuilder getWaterOrBuilder() {
    return getWater();
  }

  public static final int SOIL_FIELD_NUMBER = 3;
  private jt.smartFarmingService3.soil soil_;
  /**
   * <code>.service3CropHealth.soil soil = 3;</code>
   */
  public boolean hasSoil() {
    return soil_ != null;
  }
  /**
   * <code>.service3CropHealth.soil soil = 3;</code>
   */
  public jt.smartFarmingService3.soil getSoil() {
    return soil_ == null ? jt.smartFarmingService3.soil.getDefaultInstance() : soil_;
  }
  /**
   * <code>.service3CropHealth.soil soil = 3;</code>
   */
  public jt.smartFarmingService3.soilOrBuilder getSoilOrBuilder() {
    return getSoil();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (health_ != null) {
      output.writeMessage(1, getHealth());
    }
    if (water_ != null) {
      output.writeMessage(2, getWater());
    }
    if (soil_ != null) {
      output.writeMessage(3, getSoil());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (health_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getHealth());
    }
    if (water_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getWater());
    }
    if (soil_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSoil());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof jt.smartFarmingService3.cropHealthRequest)) {
      return super.equals(obj);
    }
    jt.smartFarmingService3.cropHealthRequest other = (jt.smartFarmingService3.cropHealthRequest) obj;

    boolean result = true;
    result = result && (hasHealth() == other.hasHealth());
    if (hasHealth()) {
      result = result && getHealth()
          .equals(other.getHealth());
    }
    result = result && (hasWater() == other.hasWater());
    if (hasWater()) {
      result = result && getWater()
          .equals(other.getWater());
    }
    result = result && (hasSoil() == other.hasSoil());
    if (hasSoil()) {
      result = result && getSoil()
          .equals(other.getSoil());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasHealth()) {
      hash = (37 * hash) + HEALTH_FIELD_NUMBER;
      hash = (53 * hash) + getHealth().hashCode();
    }
    if (hasWater()) {
      hash = (37 * hash) + WATER_FIELD_NUMBER;
      hash = (53 * hash) + getWater().hashCode();
    }
    if (hasSoil()) {
      hash = (37 * hash) + SOIL_FIELD_NUMBER;
      hash = (53 * hash) + getSoil().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static jt.smartFarmingService3.cropHealthRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static jt.smartFarmingService3.cropHealthRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static jt.smartFarmingService3.cropHealthRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static jt.smartFarmingService3.cropHealthRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static jt.smartFarmingService3.cropHealthRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static jt.smartFarmingService3.cropHealthRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static jt.smartFarmingService3.cropHealthRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static jt.smartFarmingService3.cropHealthRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static jt.smartFarmingService3.cropHealthRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static jt.smartFarmingService3.cropHealthRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static jt.smartFarmingService3.cropHealthRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static jt.smartFarmingService3.cropHealthRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(jt.smartFarmingService3.cropHealthRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code service3CropHealth.cropHealthRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:service3CropHealth.cropHealthRequest)
      jt.smartFarmingService3.cropHealthRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jt.smartFarmingService3.Service3CropHealthImpl.internal_static_service3CropHealth_cropHealthRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jt.smartFarmingService3.Service3CropHealthImpl.internal_static_service3CropHealth_cropHealthRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              jt.smartFarmingService3.cropHealthRequest.class, jt.smartFarmingService3.cropHealthRequest.Builder.class);
    }

    // Construct using jt.smartFarmingService3.cropHealthRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (healthBuilder_ == null) {
        health_ = null;
      } else {
        health_ = null;
        healthBuilder_ = null;
      }
      if (waterBuilder_ == null) {
        water_ = null;
      } else {
        water_ = null;
        waterBuilder_ = null;
      }
      if (soilBuilder_ == null) {
        soil_ = null;
      } else {
        soil_ = null;
        soilBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return jt.smartFarmingService3.Service3CropHealthImpl.internal_static_service3CropHealth_cropHealthRequest_descriptor;
    }

    @java.lang.Override
    public jt.smartFarmingService3.cropHealthRequest getDefaultInstanceForType() {
      return jt.smartFarmingService3.cropHealthRequest.getDefaultInstance();
    }

    @java.lang.Override
    public jt.smartFarmingService3.cropHealthRequest build() {
      jt.smartFarmingService3.cropHealthRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public jt.smartFarmingService3.cropHealthRequest buildPartial() {
      jt.smartFarmingService3.cropHealthRequest result = new jt.smartFarmingService3.cropHealthRequest(this);
      if (healthBuilder_ == null) {
        result.health_ = health_;
      } else {
        result.health_ = healthBuilder_.build();
      }
      if (waterBuilder_ == null) {
        result.water_ = water_;
      } else {
        result.water_ = waterBuilder_.build();
      }
      if (soilBuilder_ == null) {
        result.soil_ = soil_;
      } else {
        result.soil_ = soilBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof jt.smartFarmingService3.cropHealthRequest) {
        return mergeFrom((jt.smartFarmingService3.cropHealthRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(jt.smartFarmingService3.cropHealthRequest other) {
      if (other == jt.smartFarmingService3.cropHealthRequest.getDefaultInstance()) return this;
      if (other.hasHealth()) {
        mergeHealth(other.getHealth());
      }
      if (other.hasWater()) {
        mergeWater(other.getWater());
      }
      if (other.hasSoil()) {
        mergeSoil(other.getSoil());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      jt.smartFarmingService3.cropHealthRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (jt.smartFarmingService3.cropHealthRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private jt.smartFarmingService3.health health_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        jt.smartFarmingService3.health, jt.smartFarmingService3.health.Builder, jt.smartFarmingService3.healthOrBuilder> healthBuilder_;
    /**
     * <code>.service3CropHealth.health health = 1;</code>
     */
    public boolean hasHealth() {
      return healthBuilder_ != null || health_ != null;
    }
    /**
     * <code>.service3CropHealth.health health = 1;</code>
     */
    public jt.smartFarmingService3.health getHealth() {
      if (healthBuilder_ == null) {
        return health_ == null ? jt.smartFarmingService3.health.getDefaultInstance() : health_;
      } else {
        return healthBuilder_.getMessage();
      }
    }
    /**
     * <code>.service3CropHealth.health health = 1;</code>
     */
    public Builder setHealth(jt.smartFarmingService3.health value) {
      if (healthBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        health_ = value;
        onChanged();
      } else {
        healthBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.service3CropHealth.health health = 1;</code>
     */
    public Builder setHealth(
        jt.smartFarmingService3.health.Builder builderForValue) {
      if (healthBuilder_ == null) {
        health_ = builderForValue.build();
        onChanged();
      } else {
        healthBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.service3CropHealth.health health = 1;</code>
     */
    public Builder mergeHealth(jt.smartFarmingService3.health value) {
      if (healthBuilder_ == null) {
        if (health_ != null) {
          health_ =
            jt.smartFarmingService3.health.newBuilder(health_).mergeFrom(value).buildPartial();
        } else {
          health_ = value;
        }
        onChanged();
      } else {
        healthBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.service3CropHealth.health health = 1;</code>
     */
    public Builder clearHealth() {
      if (healthBuilder_ == null) {
        health_ = null;
        onChanged();
      } else {
        health_ = null;
        healthBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.service3CropHealth.health health = 1;</code>
     */
    public jt.smartFarmingService3.health.Builder getHealthBuilder() {
      
      onChanged();
      return getHealthFieldBuilder().getBuilder();
    }
    /**
     * <code>.service3CropHealth.health health = 1;</code>
     */
    public jt.smartFarmingService3.healthOrBuilder getHealthOrBuilder() {
      if (healthBuilder_ != null) {
        return healthBuilder_.getMessageOrBuilder();
      } else {
        return health_ == null ?
            jt.smartFarmingService3.health.getDefaultInstance() : health_;
      }
    }
    /**
     * <code>.service3CropHealth.health health = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        jt.smartFarmingService3.health, jt.smartFarmingService3.health.Builder, jt.smartFarmingService3.healthOrBuilder> 
        getHealthFieldBuilder() {
      if (healthBuilder_ == null) {
        healthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            jt.smartFarmingService3.health, jt.smartFarmingService3.health.Builder, jt.smartFarmingService3.healthOrBuilder>(
                getHealth(),
                getParentForChildren(),
                isClean());
        health_ = null;
      }
      return healthBuilder_;
    }

    private jt.smartFarmingService3.water water_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        jt.smartFarmingService3.water, jt.smartFarmingService3.water.Builder, jt.smartFarmingService3.waterOrBuilder> waterBuilder_;
    /**
     * <code>.service3CropHealth.water water = 2;</code>
     */
    public boolean hasWater() {
      return waterBuilder_ != null || water_ != null;
    }
    /**
     * <code>.service3CropHealth.water water = 2;</code>
     */
    public jt.smartFarmingService3.water getWater() {
      if (waterBuilder_ == null) {
        return water_ == null ? jt.smartFarmingService3.water.getDefaultInstance() : water_;
      } else {
        return waterBuilder_.getMessage();
      }
    }
    /**
     * <code>.service3CropHealth.water water = 2;</code>
     */
    public Builder setWater(jt.smartFarmingService3.water value) {
      if (waterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        water_ = value;
        onChanged();
      } else {
        waterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.service3CropHealth.water water = 2;</code>
     */
    public Builder setWater(
        jt.smartFarmingService3.water.Builder builderForValue) {
      if (waterBuilder_ == null) {
        water_ = builderForValue.build();
        onChanged();
      } else {
        waterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.service3CropHealth.water water = 2;</code>
     */
    public Builder mergeWater(jt.smartFarmingService3.water value) {
      if (waterBuilder_ == null) {
        if (water_ != null) {
          water_ =
            jt.smartFarmingService3.water.newBuilder(water_).mergeFrom(value).buildPartial();
        } else {
          water_ = value;
        }
        onChanged();
      } else {
        waterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.service3CropHealth.water water = 2;</code>
     */
    public Builder clearWater() {
      if (waterBuilder_ == null) {
        water_ = null;
        onChanged();
      } else {
        water_ = null;
        waterBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.service3CropHealth.water water = 2;</code>
     */
    public jt.smartFarmingService3.water.Builder getWaterBuilder() {
      
      onChanged();
      return getWaterFieldBuilder().getBuilder();
    }
    /**
     * <code>.service3CropHealth.water water = 2;</code>
     */
    public jt.smartFarmingService3.waterOrBuilder getWaterOrBuilder() {
      if (waterBuilder_ != null) {
        return waterBuilder_.getMessageOrBuilder();
      } else {
        return water_ == null ?
            jt.smartFarmingService3.water.getDefaultInstance() : water_;
      }
    }
    /**
     * <code>.service3CropHealth.water water = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        jt.smartFarmingService3.water, jt.smartFarmingService3.water.Builder, jt.smartFarmingService3.waterOrBuilder> 
        getWaterFieldBuilder() {
      if (waterBuilder_ == null) {
        waterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            jt.smartFarmingService3.water, jt.smartFarmingService3.water.Builder, jt.smartFarmingService3.waterOrBuilder>(
                getWater(),
                getParentForChildren(),
                isClean());
        water_ = null;
      }
      return waterBuilder_;
    }

    private jt.smartFarmingService3.soil soil_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        jt.smartFarmingService3.soil, jt.smartFarmingService3.soil.Builder, jt.smartFarmingService3.soilOrBuilder> soilBuilder_;
    /**
     * <code>.service3CropHealth.soil soil = 3;</code>
     */
    public boolean hasSoil() {
      return soilBuilder_ != null || soil_ != null;
    }
    /**
     * <code>.service3CropHealth.soil soil = 3;</code>
     */
    public jt.smartFarmingService3.soil getSoil() {
      if (soilBuilder_ == null) {
        return soil_ == null ? jt.smartFarmingService3.soil.getDefaultInstance() : soil_;
      } else {
        return soilBuilder_.getMessage();
      }
    }
    /**
     * <code>.service3CropHealth.soil soil = 3;</code>
     */
    public Builder setSoil(jt.smartFarmingService3.soil value) {
      if (soilBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        soil_ = value;
        onChanged();
      } else {
        soilBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.service3CropHealth.soil soil = 3;</code>
     */
    public Builder setSoil(
        jt.smartFarmingService3.soil.Builder builderForValue) {
      if (soilBuilder_ == null) {
        soil_ = builderForValue.build();
        onChanged();
      } else {
        soilBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.service3CropHealth.soil soil = 3;</code>
     */
    public Builder mergeSoil(jt.smartFarmingService3.soil value) {
      if (soilBuilder_ == null) {
        if (soil_ != null) {
          soil_ =
            jt.smartFarmingService3.soil.newBuilder(soil_).mergeFrom(value).buildPartial();
        } else {
          soil_ = value;
        }
        onChanged();
      } else {
        soilBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.service3CropHealth.soil soil = 3;</code>
     */
    public Builder clearSoil() {
      if (soilBuilder_ == null) {
        soil_ = null;
        onChanged();
      } else {
        soil_ = null;
        soilBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.service3CropHealth.soil soil = 3;</code>
     */
    public jt.smartFarmingService3.soil.Builder getSoilBuilder() {
      
      onChanged();
      return getSoilFieldBuilder().getBuilder();
    }
    /**
     * <code>.service3CropHealth.soil soil = 3;</code>
     */
    public jt.smartFarmingService3.soilOrBuilder getSoilOrBuilder() {
      if (soilBuilder_ != null) {
        return soilBuilder_.getMessageOrBuilder();
      } else {
        return soil_ == null ?
            jt.smartFarmingService3.soil.getDefaultInstance() : soil_;
      }
    }
    /**
     * <code>.service3CropHealth.soil soil = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        jt.smartFarmingService3.soil, jt.smartFarmingService3.soil.Builder, jt.smartFarmingService3.soilOrBuilder> 
        getSoilFieldBuilder() {
      if (soilBuilder_ == null) {
        soilBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            jt.smartFarmingService3.soil, jt.smartFarmingService3.soil.Builder, jt.smartFarmingService3.soilOrBuilder>(
                getSoil(),
                getParentForChildren(),
                isClean());
        soil_ = null;
      }
      return soilBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:service3CropHealth.cropHealthRequest)
  }

  // @@protoc_insertion_point(class_scope:service3CropHealth.cropHealthRequest)
  private static final jt.smartFarmingService3.cropHealthRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new jt.smartFarmingService3.cropHealthRequest();
  }

  public static jt.smartFarmingService3.cropHealthRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<cropHealthRequest>
      PARSER = new com.google.protobuf.AbstractParser<cropHealthRequest>() {
    @java.lang.Override
    public cropHealthRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new cropHealthRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<cropHealthRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<cropHealthRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public jt.smartFarmingService3.cropHealthRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

