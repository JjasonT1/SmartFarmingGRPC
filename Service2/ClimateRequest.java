// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Service2Climate.proto

package jt.smartFarmingService2;

/**
 * Protobuf type {@code service2Climate.ClimateRequest}
 */
public  final class ClimateRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:service2Climate.ClimateRequest)
    ClimateRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ClimateRequest.newBuilder() to construct.
  private ClimateRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ClimateRequest() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ClimateRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            jt.smartFarmingService2.rainfall.Builder subBuilder = null;
            if (rainfallRequest_ != null) {
              subBuilder = rainfallRequest_.toBuilder();
            }
            rainfallRequest_ = input.readMessage(jt.smartFarmingService2.rainfall.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(rainfallRequest_);
              rainfallRequest_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            jt.smartFarmingService2.temperature.Builder subBuilder = null;
            if (temperatureRequest_ != null) {
              subBuilder = temperatureRequest_.toBuilder();
            }
            temperatureRequest_ = input.readMessage(jt.smartFarmingService2.temperature.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(temperatureRequest_);
              temperatureRequest_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return jt.smartFarmingService2.Service2ClimateImpl.internal_static_service2Climate_ClimateRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return jt.smartFarmingService2.Service2ClimateImpl.internal_static_service2Climate_ClimateRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            jt.smartFarmingService2.ClimateRequest.class, jt.smartFarmingService2.ClimateRequest.Builder.class);
  }

  public static final int RAINFALLREQUEST_FIELD_NUMBER = 1;
  private jt.smartFarmingService2.rainfall rainfallRequest_;
  /**
   * <code>.service2Climate.rainfall rainfallRequest = 1;</code>
   */
  public boolean hasRainfallRequest() {
    return rainfallRequest_ != null;
  }
  /**
   * <code>.service2Climate.rainfall rainfallRequest = 1;</code>
   */
  public jt.smartFarmingService2.rainfall getRainfallRequest() {
    return rainfallRequest_ == null ? jt.smartFarmingService2.rainfall.getDefaultInstance() : rainfallRequest_;
  }
  /**
   * <code>.service2Climate.rainfall rainfallRequest = 1;</code>
   */
  public jt.smartFarmingService2.rainfallOrBuilder getRainfallRequestOrBuilder() {
    return getRainfallRequest();
  }

  public static final int TEMPERATUREREQUEST_FIELD_NUMBER = 2;
  private jt.smartFarmingService2.temperature temperatureRequest_;
  /**
   * <code>.service2Climate.temperature temperatureRequest = 2;</code>
   */
  public boolean hasTemperatureRequest() {
    return temperatureRequest_ != null;
  }
  /**
   * <code>.service2Climate.temperature temperatureRequest = 2;</code>
   */
  public jt.smartFarmingService2.temperature getTemperatureRequest() {
    return temperatureRequest_ == null ? jt.smartFarmingService2.temperature.getDefaultInstance() : temperatureRequest_;
  }
  /**
   * <code>.service2Climate.temperature temperatureRequest = 2;</code>
   */
  public jt.smartFarmingService2.temperatureOrBuilder getTemperatureRequestOrBuilder() {
    return getTemperatureRequest();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (rainfallRequest_ != null) {
      output.writeMessage(1, getRainfallRequest());
    }
    if (temperatureRequest_ != null) {
      output.writeMessage(2, getTemperatureRequest());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (rainfallRequest_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getRainfallRequest());
    }
    if (temperatureRequest_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTemperatureRequest());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof jt.smartFarmingService2.ClimateRequest)) {
      return super.equals(obj);
    }
    jt.smartFarmingService2.ClimateRequest other = (jt.smartFarmingService2.ClimateRequest) obj;

    boolean result = true;
    result = result && (hasRainfallRequest() == other.hasRainfallRequest());
    if (hasRainfallRequest()) {
      result = result && getRainfallRequest()
          .equals(other.getRainfallRequest());
    }
    result = result && (hasTemperatureRequest() == other.hasTemperatureRequest());
    if (hasTemperatureRequest()) {
      result = result && getTemperatureRequest()
          .equals(other.getTemperatureRequest());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRainfallRequest()) {
      hash = (37 * hash) + RAINFALLREQUEST_FIELD_NUMBER;
      hash = (53 * hash) + getRainfallRequest().hashCode();
    }
    if (hasTemperatureRequest()) {
      hash = (37 * hash) + TEMPERATUREREQUEST_FIELD_NUMBER;
      hash = (53 * hash) + getTemperatureRequest().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static jt.smartFarmingService2.ClimateRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static jt.smartFarmingService2.ClimateRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static jt.smartFarmingService2.ClimateRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static jt.smartFarmingService2.ClimateRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static jt.smartFarmingService2.ClimateRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static jt.smartFarmingService2.ClimateRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static jt.smartFarmingService2.ClimateRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static jt.smartFarmingService2.ClimateRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static jt.smartFarmingService2.ClimateRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static jt.smartFarmingService2.ClimateRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static jt.smartFarmingService2.ClimateRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static jt.smartFarmingService2.ClimateRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(jt.smartFarmingService2.ClimateRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code service2Climate.ClimateRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:service2Climate.ClimateRequest)
      jt.smartFarmingService2.ClimateRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jt.smartFarmingService2.Service2ClimateImpl.internal_static_service2Climate_ClimateRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jt.smartFarmingService2.Service2ClimateImpl.internal_static_service2Climate_ClimateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              jt.smartFarmingService2.ClimateRequest.class, jt.smartFarmingService2.ClimateRequest.Builder.class);
    }

    // Construct using jt.smartFarmingService2.ClimateRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (rainfallRequestBuilder_ == null) {
        rainfallRequest_ = null;
      } else {
        rainfallRequest_ = null;
        rainfallRequestBuilder_ = null;
      }
      if (temperatureRequestBuilder_ == null) {
        temperatureRequest_ = null;
      } else {
        temperatureRequest_ = null;
        temperatureRequestBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return jt.smartFarmingService2.Service2ClimateImpl.internal_static_service2Climate_ClimateRequest_descriptor;
    }

    @java.lang.Override
    public jt.smartFarmingService2.ClimateRequest getDefaultInstanceForType() {
      return jt.smartFarmingService2.ClimateRequest.getDefaultInstance();
    }

    @java.lang.Override
    public jt.smartFarmingService2.ClimateRequest build() {
      jt.smartFarmingService2.ClimateRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public jt.smartFarmingService2.ClimateRequest buildPartial() {
      jt.smartFarmingService2.ClimateRequest result = new jt.smartFarmingService2.ClimateRequest(this);
      if (rainfallRequestBuilder_ == null) {
        result.rainfallRequest_ = rainfallRequest_;
      } else {
        result.rainfallRequest_ = rainfallRequestBuilder_.build();
      }
      if (temperatureRequestBuilder_ == null) {
        result.temperatureRequest_ = temperatureRequest_;
      } else {
        result.temperatureRequest_ = temperatureRequestBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof jt.smartFarmingService2.ClimateRequest) {
        return mergeFrom((jt.smartFarmingService2.ClimateRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(jt.smartFarmingService2.ClimateRequest other) {
      if (other == jt.smartFarmingService2.ClimateRequest.getDefaultInstance()) return this;
      if (other.hasRainfallRequest()) {
        mergeRainfallRequest(other.getRainfallRequest());
      }
      if (other.hasTemperatureRequest()) {
        mergeTemperatureRequest(other.getTemperatureRequest());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      jt.smartFarmingService2.ClimateRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (jt.smartFarmingService2.ClimateRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private jt.smartFarmingService2.rainfall rainfallRequest_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        jt.smartFarmingService2.rainfall, jt.smartFarmingService2.rainfall.Builder, jt.smartFarmingService2.rainfallOrBuilder> rainfallRequestBuilder_;
    /**
     * <code>.service2Climate.rainfall rainfallRequest = 1;</code>
     */
    public boolean hasRainfallRequest() {
      return rainfallRequestBuilder_ != null || rainfallRequest_ != null;
    }
    /**
     * <code>.service2Climate.rainfall rainfallRequest = 1;</code>
     */
    public jt.smartFarmingService2.rainfall getRainfallRequest() {
      if (rainfallRequestBuilder_ == null) {
        return rainfallRequest_ == null ? jt.smartFarmingService2.rainfall.getDefaultInstance() : rainfallRequest_;
      } else {
        return rainfallRequestBuilder_.getMessage();
      }
    }
    /**
     * <code>.service2Climate.rainfall rainfallRequest = 1;</code>
     */
    public Builder setRainfallRequest(jt.smartFarmingService2.rainfall value) {
      if (rainfallRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rainfallRequest_ = value;
        onChanged();
      } else {
        rainfallRequestBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.service2Climate.rainfall rainfallRequest = 1;</code>
     */
    public Builder setRainfallRequest(
        jt.smartFarmingService2.rainfall.Builder builderForValue) {
      if (rainfallRequestBuilder_ == null) {
        rainfallRequest_ = builderForValue.build();
        onChanged();
      } else {
        rainfallRequestBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.service2Climate.rainfall rainfallRequest = 1;</code>
     */
    public Builder mergeRainfallRequest(jt.smartFarmingService2.rainfall value) {
      if (rainfallRequestBuilder_ == null) {
        if (rainfallRequest_ != null) {
          rainfallRequest_ =
            jt.smartFarmingService2.rainfall.newBuilder(rainfallRequest_).mergeFrom(value).buildPartial();
        } else {
          rainfallRequest_ = value;
        }
        onChanged();
      } else {
        rainfallRequestBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.service2Climate.rainfall rainfallRequest = 1;</code>
     */
    public Builder clearRainfallRequest() {
      if (rainfallRequestBuilder_ == null) {
        rainfallRequest_ = null;
        onChanged();
      } else {
        rainfallRequest_ = null;
        rainfallRequestBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.service2Climate.rainfall rainfallRequest = 1;</code>
     */
    public jt.smartFarmingService2.rainfall.Builder getRainfallRequestBuilder() {
      
      onChanged();
      return getRainfallRequestFieldBuilder().getBuilder();
    }
    /**
     * <code>.service2Climate.rainfall rainfallRequest = 1;</code>
     */
    public jt.smartFarmingService2.rainfallOrBuilder getRainfallRequestOrBuilder() {
      if (rainfallRequestBuilder_ != null) {
        return rainfallRequestBuilder_.getMessageOrBuilder();
      } else {
        return rainfallRequest_ == null ?
            jt.smartFarmingService2.rainfall.getDefaultInstance() : rainfallRequest_;
      }
    }
    /**
     * <code>.service2Climate.rainfall rainfallRequest = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        jt.smartFarmingService2.rainfall, jt.smartFarmingService2.rainfall.Builder, jt.smartFarmingService2.rainfallOrBuilder> 
        getRainfallRequestFieldBuilder() {
      if (rainfallRequestBuilder_ == null) {
        rainfallRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            jt.smartFarmingService2.rainfall, jt.smartFarmingService2.rainfall.Builder, jt.smartFarmingService2.rainfallOrBuilder>(
                getRainfallRequest(),
                getParentForChildren(),
                isClean());
        rainfallRequest_ = null;
      }
      return rainfallRequestBuilder_;
    }

    private jt.smartFarmingService2.temperature temperatureRequest_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        jt.smartFarmingService2.temperature, jt.smartFarmingService2.temperature.Builder, jt.smartFarmingService2.temperatureOrBuilder> temperatureRequestBuilder_;
    /**
     * <code>.service2Climate.temperature temperatureRequest = 2;</code>
     */
    public boolean hasTemperatureRequest() {
      return temperatureRequestBuilder_ != null || temperatureRequest_ != null;
    }
    /**
     * <code>.service2Climate.temperature temperatureRequest = 2;</code>
     */
    public jt.smartFarmingService2.temperature getTemperatureRequest() {
      if (temperatureRequestBuilder_ == null) {
        return temperatureRequest_ == null ? jt.smartFarmingService2.temperature.getDefaultInstance() : temperatureRequest_;
      } else {
        return temperatureRequestBuilder_.getMessage();
      }
    }
    /**
     * <code>.service2Climate.temperature temperatureRequest = 2;</code>
     */
    public Builder setTemperatureRequest(jt.smartFarmingService2.temperature value) {
      if (temperatureRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        temperatureRequest_ = value;
        onChanged();
      } else {
        temperatureRequestBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.service2Climate.temperature temperatureRequest = 2;</code>
     */
    public Builder setTemperatureRequest(
        jt.smartFarmingService2.temperature.Builder builderForValue) {
      if (temperatureRequestBuilder_ == null) {
        temperatureRequest_ = builderForValue.build();
        onChanged();
      } else {
        temperatureRequestBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.service2Climate.temperature temperatureRequest = 2;</code>
     */
    public Builder mergeTemperatureRequest(jt.smartFarmingService2.temperature value) {
      if (temperatureRequestBuilder_ == null) {
        if (temperatureRequest_ != null) {
          temperatureRequest_ =
            jt.smartFarmingService2.temperature.newBuilder(temperatureRequest_).mergeFrom(value).buildPartial();
        } else {
          temperatureRequest_ = value;
        }
        onChanged();
      } else {
        temperatureRequestBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.service2Climate.temperature temperatureRequest = 2;</code>
     */
    public Builder clearTemperatureRequest() {
      if (temperatureRequestBuilder_ == null) {
        temperatureRequest_ = null;
        onChanged();
      } else {
        temperatureRequest_ = null;
        temperatureRequestBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.service2Climate.temperature temperatureRequest = 2;</code>
     */
    public jt.smartFarmingService2.temperature.Builder getTemperatureRequestBuilder() {
      
      onChanged();
      return getTemperatureRequestFieldBuilder().getBuilder();
    }
    /**
     * <code>.service2Climate.temperature temperatureRequest = 2;</code>
     */
    public jt.smartFarmingService2.temperatureOrBuilder getTemperatureRequestOrBuilder() {
      if (temperatureRequestBuilder_ != null) {
        return temperatureRequestBuilder_.getMessageOrBuilder();
      } else {
        return temperatureRequest_ == null ?
            jt.smartFarmingService2.temperature.getDefaultInstance() : temperatureRequest_;
      }
    }
    /**
     * <code>.service2Climate.temperature temperatureRequest = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        jt.smartFarmingService2.temperature, jt.smartFarmingService2.temperature.Builder, jt.smartFarmingService2.temperatureOrBuilder> 
        getTemperatureRequestFieldBuilder() {
      if (temperatureRequestBuilder_ == null) {
        temperatureRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            jt.smartFarmingService2.temperature, jt.smartFarmingService2.temperature.Builder, jt.smartFarmingService2.temperatureOrBuilder>(
                getTemperatureRequest(),
                getParentForChildren(),
                isClean());
        temperatureRequest_ = null;
      }
      return temperatureRequestBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:service2Climate.ClimateRequest)
  }

  // @@protoc_insertion_point(class_scope:service2Climate.ClimateRequest)
  private static final jt.smartFarmingService2.ClimateRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new jt.smartFarmingService2.ClimateRequest();
  }

  public static jt.smartFarmingService2.ClimateRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ClimateRequest>
      PARSER = new com.google.protobuf.AbstractParser<ClimateRequest>() {
    @java.lang.Override
    public ClimateRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ClimateRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ClimateRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ClimateRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public jt.smartFarmingService2.ClimateRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

